apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-app
  namespace: tomcatk8s
  labels:
    app: spring-boot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-app
  template:
    metadata:
      labels:
        app: spring-boot-app
    spec:
      restartPolicy: Always
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: spring-boot-app
        image: gstvo2k15/ultimate-cicd:v1.0.0
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - NET_RAW
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tomcat-war-storage
          mountPath: /usr/local/tomcat/webapps/
        envFrom:
        - configMapRef:
            name: spring-boot-config
        - secretRef:
            name: spring-boot-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        command: ["sh", "-c", "while true; do sleep 30; done"]
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: tomcat-war-storage
        persistentVolumeClaim:
          claimName: tomcat-war-pvc
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-app
  namespace: tomcatk8s
spec:
  podSelector:
    matchLabels:
      app: spring-boot-app
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
