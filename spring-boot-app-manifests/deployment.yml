apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-app
  namespace: tomcatk8s
  labels:
    app: spring-boot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-app
  template:
    metadata:
      labels:
        app: spring-boot-app
    spec:
      restartPolicy: Always
      initContainers:
      - name: check-war
        image: busybox
        command: ["sh", "-c", "until [ -f /usr/local/tomcat/webapps/app.war ]; do echo 'Waiting for WAR file...'; sleep 5; done"]
        volumeMounts:
        - name: tomcat-war-storage
          mountPath: /usr/local/tomcat/webapps/
      containers:
      - name: spring-boot-app
        image: gstvo2k15/ultimate-cicd:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: spring-boot-config
              key: SPRING_DATASOURCE_URL
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: spring-boot-config
              key: SPRING_DATASOURCE_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: spring-boot-secrets
              key: SPRING_DATASOURCE_PASSWORD
        volumeMounts:
        - name: tomcat-war-storage
          mountPath: /usr/local/tomcat/webapps/
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: tomcat-war-storage
        persistentVolumeClaim:
          claimName: tomcat-war-pvc
